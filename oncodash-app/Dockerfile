FROM node:16-alpine

# Add Tini. Checkout github
# https://github.com/krallin/tini
RUN apk add --no-cache tini
ENTRYPOINT ["/sbin/tini", "--"]

# Get latest npm
RUN npm i npm@latest -g

# install dependencies first, in a different location for easier app 
# bind mounting for local development due to default /opt permissions 
# we have to create the dir with root and change perms
RUN mkdir /opt/node_app && chown node:node /opt/node_app
WORKDIR /opt/node_app

# the official node image provides an unprivileged user as a security
# best practice but we have to manually enable it. We put it here so 
# npm installs dependencies as the same user who runs the app.
# https://github.com/nodejs/docker-node/blob/master/docs/BestPractices.md#non-root-user
USER node

# copy package.json, install deps and set $PATH-var for node_modules
COPY --chown=node:node package.json package-lock.json* ./
RUN npm install --no-optional && npm cache clean --force
ENV PATH /opt/node_app/node_modules/.bin:$PATH

# copy in our source code last, as it changes the most
# copy in as node user, so permissions match what we need
RUN mkdir /opt/node_app/app && chown node:node /opt/node_app/app
WORKDIR /opt/node_app/app
COPY --chown=node:node . .

# app runs on port 8000
EXPOSE 8000

# start the dev server
CMD ["npm", "start", "--prefix", "/opt/node_app/app"]