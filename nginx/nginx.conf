upstream api {
    server backend:8888;
}

upstream frontend {
    server nodeserver:3000;
}


server {
    listen 80;
    # frontend location
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;

    server_name localhost;
    ssl_certificate /etc/ssl/certs/ca-certificates.crt;
    ssl_certificate_key /etc/letsencrypt/oncodash.ing.unimore.it/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    location / {
        # proxy_http_version 1.1;
        # proxy_cache_bypass $http_upgrade;

        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;

        # forward requests to Node.js server
        proxy_pass http://frontend;
    }




    # location / {
    #     root /usr/share/nginx/html/;
    #     include /etc/nginx/mime.types;
    #     try_files $uri $uri/ /index.html;
    # }


    # location / {
    #     root   /usr/share/nginx/html;
    #     index  index.html index.htm;
    #     try_files $uri $uri/ /index.html;
    # }

    # error_page   500 502 503 504  /50x.html;

    # location = /50x.html {
    #     root   /usr/share/nginx/html;
    # }



    # api location
    location /api/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://backend:8888/api/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

        # api location
    location /api-token-auth/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://backend:8888/api-token-auth/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    # browsable api static location
    location /static/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://nodeserver:3000/static/;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

}