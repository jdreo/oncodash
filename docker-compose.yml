version: "3.2"

services:
  # nodeserver
  nodeserver:
    image: oncodash/nodeserver
    restart: always
    user: $UID:$GID
    build:
      context: ./oncodash-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./oncodash-app
        target: /opt/node_app/app

        # this is a workaround to prevent host node_modules from accidently
        # getting mounted in container in case you want to use node/npm both
        # outside container for test/lint etc. and also inside container this
        # will overwrite the default node_modules dir in container so it won't
        # conflict with our /opt/app/node_modules location.
      - type: volume
        source: notused
        target: /opt/node_app/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - ONCODASH_PUBLIC_PATH=/next
        - ONCODASH_API_URL=https://oncodash.ing.unimore.it
    ports:
      - "3001:3001"

  # django backend gunicorn server (communicates with nginx proxy)
  backend:
    image: oncodash/backend
    restart: always
    user: $UID:$GID
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - type: bind
        source: ./backend
        target: /opt/app/

  # nginx proxy server
  nginx:
    image: oncodash/nginx
    restart: always
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source: ./data/letsencrypt
        target: /etc/letsencrypt
    depends_on:
      - nodeserver
      - frontend
      - backend

volumes:
  notused:
